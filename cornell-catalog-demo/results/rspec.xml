<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="rspec" tests="93" skipped="4" failures="1" errors="0" time="30.985671" timestamp="2018-12-12T10:31:45-05:00" hostname="lib-dev-028.serverfarm.cornell.edu">
<properties>
<property name="seed" value="60672"/>
</properties>
<testcase classname="spec.features.user_logs_in_with_google_spec" name="user logs in using google oauth2 from search history page" file="./spec/features/user_logs_in_with_google_spec.rb" time="0.002299"></testcase>
<testcase classname="spec.features.user_logs_in_with_google_spec" name="user logs in using google oauth2" file="./spec/features/user_logs_in_with_google_spec.rb" time="1.816883"></testcase>
<testcase classname="spec.features.user_logs_in_with_saml_spec" name="user logs in using netid via SAML" file="./spec/features/user_logs_in_with_saml_spec.rb" time="0.585952"></testcase>
<testcase classname="spec.features.user_logs_in_with_saml_spec" name="user logs in using netid from search history page" file="./spec/features/user_logs_in_with_saml_spec.rb" time="0.440160"></testcase>
<testcase classname="spec.models.location_spec" name="Location add some examples to (or delete) /cul/jac244/workspace/fixVunerability/spec/models/location_spec.rb" file="./spec/models/location_spec.rb" time="0.000014"><skipped/></testcase>
<testcase classname="spec.features.user_logs_in_with_facebook_spec" name="user logs in using facebook oauth2 from search history page" file="./spec/features/user_logs_in_with_facebook_spec.rb" time="0.001843"></testcase>
<testcase classname="spec.features.user_logs_in_with_facebook_spec" name="user logs in using facebook oauth2" file="./spec/features/user_logs_in_with_facebook_spec.rb" time="0.166905"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_apa_citation_txt should not bomb with a null pointer if there if author data is empty" file="./spec/models/marc_solr_document_spec.rb" time="0.297242"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_apa_citation_txt should format a standard citation correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.162335"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_apa_citation_txt should format a citation without any authors correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.144583"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_apa_citation_txt should format a citation without a 245b field correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.163883"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_apa_citation_txt should not fail if there is no citation data" file="./spec/models/marc_solr_document_spec.rb" time="0.137852"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport CSL title transformation should transform a normal MLA title properly" file="./spec/models/marc_solr_document_spec.rb" time="0.320971"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport CSL title transformation should transform a normal APA title properly" file="./spec/models/marc_solr_document_spec.rb" time="0.148564"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport Export as RIS  means that it  should export a typical book record correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.004014"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport Export as RIS  means that it  should export a simple record correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.003341"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport Export as RIS  means that it  should export a typical ebook record correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.003812"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport Format exports should export the call number, and isbn in multiple formats correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.024887"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport Format exports should export the title and type in multiple formats correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.170991"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport Format exports should export the author,publisher,date,place in multiple formats correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.151632"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should handle editors, translators, and compilers correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.506229"><skipped/></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should handle a typical record correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.382189"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should format a citation without a 245b field correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.253051"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should handle section title appropriately" file="./spec/models/marc_solr_document_spec.rb" time="0.279115"><skipped/></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should format a record w/o authors correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.272352"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should not fail if there is no citation data" file="./spec/models/marc_solr_document_spec.rb" time="0.255359"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should handle editors, translators, and compilers correctly when there is no author present" file="./spec/models/marc_solr_document_spec.rb" time="0.276458"><skipped/></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should format a citation with 4+ authors correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.283586"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should handle dissertation data correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.274525"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should handle n.d. in the 260$c properly" file="./spec/models/marc_solr_document_spec.rb" time="0.258101"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should handle 3 authors correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.273018"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_chicago_citation_txt should handle year ranges properly" file="./spec/models/marc_solr_document_spec.rb" time="0.268363"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_xml should export marcxml as xml" file="./spec/models/marc_solr_document_spec.rb" time="0.009078"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_cse_citation_txt should handle a typical record correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.088344"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport Export as endnote means that it  should export endnote properly" file="./spec/models/marc_solr_document_spec.rb" time="0.004998"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_marc binary should export_as_marc" file="./spec/models/marc_solr_document_spec.rb" time="0.001260"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format an 2 author book  correctly for chicago" file="./spec/models/marc_solr_document_spec.rb" time="0.282806"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format APA citation information properly" file="./spec/models/marc_solr_document_spec.rb" time="0.156497"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format a standard MLA citation correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.206436"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format an corporate author book  correctly for chicago" file="./spec/models/marc_solr_document_spec.rb" time="0.272717"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format APA citation information properly for multiple authors" file="./spec/models/marc_solr_document_spec.rb" time="0.210774"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format an old time book correctly for mla (7)" file="./spec/models/marc_solr_document_spec.rb" time="0.220522"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format manuscript citation information properly" file="./spec/models/marc_solr_document_spec.rb" time="0.579433"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format use citation date information properly for MLA" file="./spec/models/marc_solr_document_spec.rb" time="0.196674"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format mla7,8, and cse citation information properly" file="./spec/models/marc_solr_document_spec.rb" time="0.485478"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format an an edited book book correctly for chicago" file="./spec/models/marc_solr_document_spec.rb" time="0.291626"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format use citation date information properly for MLA" file="./spec/models/marc_solr_document_spec.rb" time="0.217726"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format a citation without a 245b field correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.198787"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format an ebook correctly for chicago" file="./spec/models/marc_solr_document_spec.rb" time="0.289290"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format a citation without any authors correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.187779"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format a citation with 4+ authors correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.200108"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format an analytic entry correctly for mla (7)" file="./spec/models/marc_solr_document_spec.rb" time="0.196707"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format use corporate author information properly for MLA" file="./spec/models/marc_solr_document_spec.rb" time="0.194147"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format APA citation information properly for corporate author" file="./spec/models/marc_solr_document_spec.rb" time="0.174995"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should not fail if there is no citation data" file="./spec/models/marc_solr_document_spec.rb" time="0.176502"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_mla_citation_txt should format mla7,8, and cse citation information properly for ebook" file="./spec/models/marc_solr_document_spec.rb" time="0.906130"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_openurl_ctx_kev should create the appropriate context object for other content" file="./spec/models/marc_solr_document_spec.rb" time="0.001518"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_openurl_ctx_kev should create the appropriate context object for books" file="./spec/models/marc_solr_document_spec.rb" time="0.001285"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_openurl_ctx_kev should create the appropriate context object for journals" file="./spec/models/marc_solr_document_spec.rb" time="0.001396"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_refworks_marc_txt should export correctly" file="./spec/models/marc_solr_document_spec.rb" time="0.126103"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_refworks_marc_txt for UTF-8 record should export in Unicode normalized C form" file="./spec/models/marc_solr_document_spec.rb" time="0.001744"></testcase>
<testcase classname="spec.models.marc_solr_document_spec" name="Blacklight::Solr::Document::MarcExport export_as_marcxml should export_as_marcxml" file="./spec/models/marc_solr_document_spec.rb" time="0.008821"></testcase>
<testcase classname="spec.features.bookmarks_spec" name="user saves bookmarks by selecting items from results list" file="./spec/features/bookmarks_spec.rb" time="16.251235"><failure message="expected to find text &quot;of 2&quot; in &quot;skip to main content Cornell University MENU Cornell University Library LIBRARY CATALOG Sign in Selected Items (0) Search HistorySearch Tips Borrow DirectInterlibrary Loan Search...Search inforSearch ADVANCED SEARCH ASK A LIBRARIAN MY ACCOUNT Selected Items You have no selected items. CONTACT US Ask a Librarian Chat with a Librarian RESOURCES Library Website Search Catalog Articles &amp; Full-Text Databases E-journal Titles Images Feedback Release Notes © 2018 Cornell University Library | Privacy | Web Accessibility Assistance Solr core: da-prod-solr.library.cornell.edu/solr/blacklight&quot;" type="RSpec::Expectations::ExpectationNotMetError">Failure/Error: expect(page).to have_content(&quot;of 2&quot;)
  expected to find text &quot;of 2&quot; in &quot;skip to main content Cornell University MENU Cornell University Library LIBRARY CATALOG Sign in Selected Items (0) Search HistorySearch Tips Borrow DirectInterlibrary Loan Search...Search inforSearch ADVANCED SEARCH ASK A LIBRARIAN MY ACCOUNT Selected Items You have no selected items. CONTACT US Ask a Librarian Chat with a Librarian RESOURCES Library Website Search Catalog Articles &amp; Full-Text Databases E-journal Titles Images Feedback Release Notes © 2018 Cornell University Library | Privacy | Web Accessibility Assistance Solr core: da-prod-solr.library.cornell.edu/solr/blacklight&quot;
./spec/features/bookmarks_spec.rb:29:in `block (2 levels) in &lt;top (required)&gt;&apos;</failure></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Hashy methods should create a doc with hashy methods" file="./spec/models/solr_document_spec.rb" time="0.004645"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Unique Key should use a configuration-defined document unique key" file="./spec/models/solr_document_spec.rb" time="0.001645"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Primary key should be the same as the unique key" file="./spec/models/solr_document_spec.rb" time="0.001165"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument #to_param should be a string" file="./spec/models/solr_document_spec.rb" time="0.001103"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument highlighting #highlight_field should return nil when the field doesn&apos;t exist" file="./spec/models/solr_document_spec.rb" time="0.001148"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument highlighting #highlight_field should return a value" file="./spec/models/solr_document_spec.rb" time="0.001082"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument highlighting #highlight_field should return a value that is html safe" file="./spec/models/solr_document_spec.rb" time="0.001089"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument highlighting #has_highlight_field? should be true if the highlight field is in the solr response" file="./spec/models/solr_document_spec.rb" time="0.003906"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument highlighting #has_highlight_field? should be false if the highlight field isn&apos;t in the solr response" file="./spec/models/solr_document_spec.rb" time="0.001235"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Will export as export_as(:format) by calling export_as_format" file="./spec/models/solr_document_spec.rb" time="0.005628"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Will export as reports it&apos;s exportable formats properly" file="./spec/models/solr_document_spec.rb" time="0.001396"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Will export as should know if a document is exportable" file="./spec/models/solr_document_spec.rb" time="0.003185"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Will export as looks up content-type from Mime::Type if not given in arg" file="./spec/models/solr_document_spec.rb" time="0.001352"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Will export as format not registered with Mime::Type registers format" file="./spec/models/solr_document_spec.rb" time="0.001039"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Will export as format not registered with Mime::Type registers as alias only" file="./spec/models/solr_document_spec.rb" time="0.001015"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument to_semantic_fields should return complete dictionary based on config&apos;d fields" file="./spec/models/solr_document_spec.rb" time="0.001059"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument to_semantic_fields should return an array even for a single-value field" file="./spec/models/solr_document_spec.rb" time="0.002701"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument to_semantic_fields should return complete array for a multi-value field" file="./spec/models/solr_document_spec.rb" time="0.001001"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument to_semantic_fields should return empty array for a key without a value" file="./spec/models/solr_document_spec.rb" time="0.001066"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument #first should get the first value from a multi-valued field" file="./spec/models/solr_document_spec.rb" time="0.001167"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument #first should get the value from a single-valued field" file="./spec/models/solr_document_spec.rb" time="0.001121"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability should let last extension applied override earlier extensions" file="./spec/models/solr_document_spec.rb" time="0.001283"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability should let you register an extension with a nil condition proc" file="./spec/models/solr_document_spec.rb" time="0.001025"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability should apply an extension whose condition is met" file="./spec/models/solr_document_spec.rb" time="0.001190"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability should treat a nil condition as always applyable" file="./spec/models/solr_document_spec.rb" time="0.001174"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability should apply an extension based on a Solr field" file="./spec/models/solr_document_spec.rb" time="0.001296"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability should let you register an extension" file="./spec/models/solr_document_spec.rb" time="0.001007"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability should not apply an extension whose condition is not met" file="./spec/models/solr_document_spec.rb" time="0.001205"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability extension_parameters class-level hash should provide an extension_parameters hash at the class level" file="./spec/models/solr_document_spec.rb" time="0.001190"></testcase>
<testcase classname="spec.models.solr_document_spec" name="SolrDocument Extendability extension_parameters class-level hash extension_parameters should not be shared between classes" file="./spec/models/solr_document_spec.rb" time="0.005166"></testcase>
</testsuite>
